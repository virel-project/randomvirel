name: C/C++ CI

on:
  push:
    branches: [ master ]
  release:
    types: [ published ]
  pull_request:

jobs:
  build-alpine:

    timeout-minutes: 15
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        config:
          - {arch: x86_64}
          # - {arch: x86, branch: latest-stable}
          - {arch: aarch64}
          # - {arch: armhf, branch: latest-stable}
          # - {arch: armv7, branch: latest-stable}
          # - {arch: ppc64le, branch: latest-stable}
          - {arch: riscv64}
          # - {arch: s390x, branch: latest-stable}

    steps:
    - name: Setup Alpine Linux
      uses: jirutka/setup-alpine@v1
      with:
        arch: ${{ matrix.config.arch }}
        branch: latest-stable

    - name: Install dependencies
      shell: alpine.sh --root {0}
      run: |
        apk add git cmake gcc g++ make

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build RandomX
      shell: alpine.sh {0}
      run: |
        mkdir build
        cd build
        cmake ..
        make -j$(nproc)

    - name: Run tests
      shell: alpine.sh {0}
      run: |
        build/randomx-tests

    - uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.config.arch }}
        path: build/librandomx.a

  build-windows-msbuild:

    timeout-minutes: 5
    runs-on: windows-${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - {arch: x64, os: 2022, vs: Visual Studio 17 2022, msbuild: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Msbuild\\Current\\Bin\\amd64\\"}
          # - {arch: Win32, os: 2022, vs: Visual Studio 17 2022, msbuild: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Msbuild\\Current\\Bin\\"}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup cmake
      uses: lukka/get-cmake@latest

    - name: Build RandomX
      run: |
        mkdir build
        cd build
        cmake .. -G "${{ matrix.config.vs }}" -A ${{ matrix.config.arch }}
        & "${{ matrix.config.msbuild }}msbuild" -v:m /m /p:Configuration=Release randomx-tests.vcxproj
    - name: Run tests
      run: |
        build/Release/randomx-tests.exe
    - uses: actions/upload-artifact@v4
      with:
        name: windows-${{ matrix.config.arch }}
        path: build/Release/randomx.lib
  build-macos:

    timeout-minutes: 5
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-15]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install cmake

    - name: Build RandomX
      run: |
        mkdir build
        cd build
        cmake ..
        make -j3

    - name: Run tests
      run: |
        build/randomx-tests

    - uses: actions/upload-artifact@v4
      with:
        name: macos-x86_64
        path: build/librandomx.a